{"stats":{"suites":7,"tests":10,"passes":1,"pending":0,"failures":9,"start":"2019-10-17T03:42:37.147Z","end":"2019-10-17T03:42:37.160Z","duration":13},"failures":[{"fullTitle":"Array #find() should return the first object for which the passed function returns true","title":"should return the first object for which the passed function returns true","error":{"name":"AssertionError","message":"expected undefined to equal 2","showDiff":true,"expected":2,"stack":"AssertionError: expected undefined to equal 2\n    at Context.<anonymous> (test/array.test.js:8:69)"}},{"fullTitle":"Array #findIndex() should return the index of the first object for which the passed function returns true","title":"should return the index of the first object for which the passed function returns true","error":{"name":"AssertionError","message":"expected undefined to equal 1","showDiff":true,"expected":1,"stack":"AssertionError: expected undefined to equal 1\n    at Context.<anonymous> (test/array.test.js:18:83)"}},{"fullTitle":"Array #findIndex() should return -1 if the function never returns true","title":"should return -1 if the function never returns true","error":{"name":"AssertionError","message":"expected undefined to equal -1","showDiff":true,"expected":-1,"stack":"AssertionError: expected undefined to equal -1\n    at Context.<anonymous> (test/array.test.js:22:69)"}},{"fullTitle":"Array #includes() should return true if the array includes the given value","title":"should return true if the array includes the given value","error":{"name":"AssertionError","message":"expected undefined to equal true","showDiff":true,"expected":true,"stack":"AssertionError: expected undefined to equal true\n    at Context.<anonymous> (test/array.test.js:28:38)"}},{"fullTitle":"Array #includes() should return false if the array does not include the given value","title":"should return false if the array does not include the given value","error":{"name":"AssertionError","message":"expected undefined to equal false","showDiff":true,"expected":false,"stack":"AssertionError: expected undefined to equal false\n    at Context.<anonymous> (test/array.test.js:32:40)"}},{"fullTitle":"String #endsWith() should return true if the string ends with the given string","title":"should return true if the string ends with the given string","error":{"name":"AssertionError","message":"expected undefined to equal true","showDiff":true,"expected":true,"stack":"AssertionError: expected undefined to equal true\n    at Context.<anonymous> (test/string.test.js:8:39)"}},{"fullTitle":"String #endsWith() should return false if the string does not end with the given string","title":"should return false if the string does not end with the given string","error":{"name":"AssertionError","message":"expected undefined to equal false","showDiff":true,"expected":false,"stack":"AssertionError: expected undefined to equal false\n    at Context.<anonymous> (test/string.test.js:12:40)"}},{"fullTitle":"String #endsWith() with a position argument returns true if the postion argument lines up with the search string","title":"returns true if the postion argument lines up with the search string","error":{"name":"AssertionError","message":"expected undefined to equal true","showDiff":true,"expected":true,"stack":"AssertionError: expected undefined to equal true\n    at Context.<anonymous> (test/string.test.js:17:47)"}},{"fullTitle":"String #endsWith() with a position argument returns false if the position argument does not line up with the search string","title":"returns false if the position argument does not line up with the search string","error":{"name":"AssertionError","message":"expected undefined to equal false","showDiff":true,"expected":false,"stack":"AssertionError: expected undefined to equal false\n    at Context.<anonymous> (test/string.test.js:21:47)"}}],"passes":[{"fullTitle":"Array #find() should return undefined if the function never returns true","title":"should return undefined if the function never returns true"}]}